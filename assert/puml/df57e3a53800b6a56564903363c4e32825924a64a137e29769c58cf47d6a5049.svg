<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="444px" preserveAspectRatio="none" style="width:2578px;height:444px;background:#FFFFFF;" version="1.1" viewBox="0 0 2578 444" width="2578px" zoomAndPan="magnify"><defs/><g><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="266" x="10" y="202.9648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="246" x="20" y="225.96">TLB (Translation Lookaside Buffer)</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="107" x="326" y="20"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="336" y="42.9951">part of MMU</text><path d="M276,221.1133 L286,221.1133 C301,221.1133 301,38.1484 316,38.1484 L326,38.1484 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="709" x="326" y="76.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="689" x="336" y="99.292">a list of mappings from virtual to physical address space in hardware (also holds permission bits)</text><path d="M276,221.1133 L286,221.1133 C301,221.1133 301,94.4453 316,94.4453 L326,94.4453 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="472" x="326" y="132.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="452" x="336" y="155.5889">a fixed number of entries(slots) in the TLB, which varies by CPU</text><path d="M276,221.1133 L286,221.1133 C301,221.1133 301,150.7422 316,150.7422 L326,150.7422 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="600" x="326" y="188.8906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="580" x="336" y="211.8857">How it works? TLB is consulted by the MMU when the CPU access a virtual address</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="707" x="976" y="160.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="687" x="986" y="183.7373">if the virtual address is in the TLB, the MMU can look up the physical resource (RAM or hardware)</text><path d="M926,207.0391 L936,207.0391 C951,207.0391 951,178.8906 966,178.8906 L976,178.8906 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="1051" x="976" y="217.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="986" y="240.0342">if the virtual address</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="47" x="1137" y="240.0342">is not</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="1188" y="240.0342">in the TLB, the MMU will generate a</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="84" x="1444" y="240.0342">page fault</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="485" x="1532" y="240.0342">exception and interrupt the CPU. (same as insufficient permissions)</text><path d="M926,207.0391 L936,207.0391 C951,207.0391 951,235.1875 966,235.1875 L976,235.1875 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M276,221.1133 L286,221.1133 C301,221.1133 301,207.0391 316,207.0391 L326,207.0391 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="134" x="326" y="329.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="336" y="352.6279">Shared memory</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="239" x="510" y="329.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="520" y="352.6279">Easily implemented with MMU.</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="499" x="799" y="273.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="479" x="809" y="296.3311">Simply map the same physical frame into two different processes.</text><path d="M749,347.7813 L759,347.7813 C774,347.7813 774,291.4844 789,291.4844 L799,291.4844 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="359" x="799" y="357.7813"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="809" y="380.7764">The virtual addresses need not to be the same.</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="1003" x="1208" y="329.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="983" x="1218" y="352.6279">If pointers to values inside a shared memory region are used, it might be important for them to have the same virtual addresses, though.</text><path d="M1158,375.9297 L1168,375.9297 C1183,375.9297 1183,347.7813 1198,347.7813 L1208,347.7813 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="1358" x="1208" y="385.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="63" x="1218" y="408.9248">mmap()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1271" x="1285" y="408.9248">system call allows the user space process to request a specific virtual address to map the shared memory region. (the kernel may not be able to grant a mappint at this address)</text><path d="M1158,375.9297 L1168,375.9297 C1183,375.9297 1183,404.0781 1198,404.0781 L1208,404.0781 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M749,347.7813 L759,347.7813 C774,347.7813 774,375.9297 789,375.9297 L799,375.9297 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M460,347.7813 L470,347.7813 C485,347.7813 485,347.7813 500,347.7813 L510,347.7813 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M276,221.1133 L286,221.1133 C301,221.1133 301,347.7813 316,347.7813 L326,347.7813 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[f6d648ad3a55c429a14a711fc203cda8]
@startmindmap
+ TLB (Translation Lookaside Buffer)
++ part of MMU
++ a list of mappings from virtual to physical address space in hardware (also holds permission bits)
++ a fixed number of entries(slots) in the TLB, which varies by CPU
++ How it works? TLB is consulted by the MMU when the CPU access a virtual address
+++ if the virtual address is in the TLB, the MMU can look up the physical resource (RAM or hardware)
+++ if the virtual address **is not** in the TLB, the MMU will generate a **page fault** exception and interrupt the CPU. (same as insufficient permissions)
++ Shared memory
+++ Easily implemented with MMU.
++++ Simply map the same physical frame into two different processes.
++++ The virtual addresses need not to be the same.
+++++ If pointers to values inside a shared memory region are used, it might be important for them to have the same virtual addresses, though.
+++++ **mmap()** system call allows the user space process to request a specific virtual address to map the shared memory region. (the kernel may not be able to grant a mappint at this address)
@endmindmap

PlantUML version 1.2022.4beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>