<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="332px" preserveAspectRatio="none" style="width:805px;height:332px;background:#000000;" version="1.1" viewBox="0 0 805 332" width="805px" zoomAndPan="magnify"><defs/><g><rect fill="#240527" height="1" style="stroke:#240527;stroke-width:1.0;" width="1" x="0" y="0"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="167" x="5" y="17">PlantUML 1.2022.4beta2</text><rect fill="#33FF02" height="21.2969" style="stroke:#33FF02;stroke-width:1.0;" width="793" x="5" y="26.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="185" x="6" y="41.9688">[From string (line 15) ]</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="62.2656"> </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="131" x="5" y="78.5625">@startmindmap</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="248" x="5" y="94.8594">+ Virtual Addresses（3 kinds）</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="77" x="5" y="111.1563">++ Kernel</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="318" x="5" y="127.4531">+++[#lightblue] Kernel Logical Address</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="304" x="5" y="143.75">++++ Normal address space of kernel</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="203" x="5" y="160.0469">*****[#moccasin]:&lt;code&gt;</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="76" x="5" y="176.3438">kmalloc()</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="71" x="5" y="192.6406">&lt;/code&gt;;</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="281" x="5" y="208.9375">+++++ Kernel stacks (per process)</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="435" x="5" y="225.2344">++++ A **fixed offset** from their physical addresses</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="388" x="5" y="241.5313">+++++_ Virt: 0xc0000000 --&gt; Phys: 0x00000000</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="625" x="5" y="257.8281">+++++ virtually-contiguous regions are by nature also physically contiguous</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="793" x="5" y="274.125">+++++ combined with the inablity to be swapped out, makes them suitable for **DMA** transfers</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="415" x="5" y="290.4219">++++ easy to convert between virtual and physical</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="wavy underline" textLength="330" x="5" y="306.7188">*****[#moccasin]:&lt;code&gt;__pa(x)&lt;/code&gt;;</text><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="109" x="10" y="323.0156">Syntax Error?</text><!--MD5=[a5f1c30e67c22284e2de19dbc620868c]
@startmindmap
+ Virtual Addresses（3 kinds）
++ Kernel
+++[#lightblue] Kernel Logical Address
++++ Normal address space of kernel
*****[#moccasin]:<code>
kmalloc()
</code>;
+++++ Kernel stacks (per process)
++++ A **fixed offset** from their physical addresses
+++++_ Virt: 0xc0000000 - -> Phys: 0x00000000
+++++ virtually-contiguous regions are by nature also physically contiguous
+++++ combined with the inablity to be swapped out, makes them suitable for **DMA** transfers
++++ easy to convert between virtual and physical
*****[#moccasin]:<code>__pa(x)</code>;
+++++ **__va(x)**
++++ Can never be swapped out
++++ Mapping
+++++ 32 bit
++++++ for small-memory systems (below 1GB RAM)
+++++++ Kernel Logical address space starts at PAGE_OFFSET and goes through the **end of physical memory**
++++++ for large-memory systems (more than 1GB RAM)
+++++++ not all of the physical RAM can be mapped into kernel's address space
+++++++ kernel address space is the top 1GB of virtual address space, by default
+++++++ ~104 MB is reserved at the top of the kernel's memory space for non-contiguous allocations
+++++++ Only the **bottom part** of physical RAM (896MB, 0xc0000000 ~ 0xf800000) has a kernel logical address
++++++++ this memory is called Low Memory (phys: 0x00000000 ~ 0xf8000000)
++++++++ High memory: beyond ~896MB
+++++++++ No logical address
+++++++++ Not physically contiguous when used in the kernel
+++++++ -> 这种情况只会在32bit中出现，kernel virtual memory < physical memory
+++++ 64 bit
++++++ always enough kernel address space to accommodate all the RAM -> **那岂不是没必要用virtual address了？**
+++++ just beacause physical addresses could have a kernel logical address, it doesn't mean the kernel is actually using every byte of memory on the system
+++[#lightblue] Kernel Virtual Address
++++ the **vmalloc()** area
++++ Used for
+++++ **Non-contiguous** memory mappings
++++++ **large buffers** which could protentially be too large to find contiguous memory
++++++ **vmalloc()**
+++++ **Memory-mapped I/O**
++++++ Map peripheral devices int kernel
++++++ ioremap(), kmap()
++[#lightblue] User Virtual Address
+++ below PAGE_OFFSET
+++ Each process has its own mapping
++++ Threads share a mapping
++++ Complex behavior with **clone(2)**
++++ **struct mm**, pointers in **task_struct**
+++ Make the full use of MMU
++++ Only the used portions of RAM are mapped
++++ Memory is not contiguous
++++ Memory may be swapped out
++++ Memory can be moved
++++ Not suitable for use by the kernel (or for DMA)
++++ At context switch time, the memory map is changed (this is part of the overhead)
@endmindmap

PlantUML version 1.2022.4beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>