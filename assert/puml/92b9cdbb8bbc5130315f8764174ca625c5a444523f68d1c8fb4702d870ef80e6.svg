<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="136px" preserveAspectRatio="none" style="width:473px;height:136px;background:#000000;" version="1.1" viewBox="0 0 473 136" width="473px" zoomAndPan="magnify"><defs/><g><rect fill="#05141C" height="1" style="stroke:#05141C;stroke-width:1.0;" width="1" x="0" y="0"/><text fill="#33FF02" font-family="sans-serif" font-size="12" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="167" x="5" y="17">PlantUML 1.2022.4beta2</text><rect fill="#33FF02" height="21.2969" style="stroke:#33FF02;stroke-width:1.0;" width="177" x="5" y="26.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="175" x="6" y="41.9688">[From string (line 3) ]</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="5" x="5" y="62.2656">Â </text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="131" x="5" y="78.5625">@startmindmap</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="159" x="5" y="94.8594">++ Virtural Memory</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" text-decoration="wavy underline" textLength="461" x="5" y="111.1563">+++ Defination: A system that uses an address mapping</text><text fill="#FF0000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="10" y="127.4531">error42L</text><!--MD5=[ad43d63c9715aa049941c8d86cfb34d5]
@startmindmap
++ Virtural Memory
+++ Defination: A system that uses an address mapping
++++ Maps virtual address space to physical address space
+++++ physical RAM
+++++ hardware devices
++++++ PCI devices
++++++ GPU RAM
++++++ On-SoC IP blocks
+++ Advantages
++++ Each processes can have a different memory mapping -> **Built-in memory protection**
+++++ One process's RAM is inaccessible (and invisible) to other processes
+++++ kernel RAM is invisible to user space processes
++++ Memory can be moved
++++ Memory can be swapped to disk
++++ Map hardware device memory to a process's address space (GPU E.g.)
++++ Physical RAM can be mapped into multiple processes at once -> **Shared memory**
++++ Access permissions for memory regions (read, write, execute)
+++ Two address spaces
++++ Physical addresses (used by **hardware**)
+++++ DMA
+++++ peripherals
++++ Virtual addresses (used by **software**)
+++++ load/store instructions (RISC)
+++++ Any instruction accessing memory (CISC)
+++ Mapping is performed in hardware -> **MMU**
++++ No performance penalty for accessing *already-mapped* RAM regions
++++ Permissions are handled without penalty
++++ The same CPU instructions are used for accessing RAM and mapped hardware
++++ Software, during its normal operation, will only use virtual addressed. (include kernel and user space, this is not true of all OS's)
@endmindmap

PlantUML version 1.2022.4beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>