<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="303px" preserveAspectRatio="none" style="width:1331px;height:303px;background:#FFFFFF;" version="1.1" viewBox="0 0 1331 303" width="1331px" zoomAndPan="magnify"><defs/><g><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="97" x="10" y="132.7195"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="20" y="155.7146">User space</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="209" x="157" y="132.7195"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="167" y="155.7146">User space allocation ways</text><rect fill="#FFE4B5" height="36.7999" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="76" x="416" y="20"/><text fill="#000000" font-family="monospace" font-size="14" lengthAdjust="spacing" textLength="56" x="426" y="42.9639">alloc()</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="245" x="542" y="20.2515"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="552" y="43.2466">sit on top of platform methods</text><path d="M492,38.4 L502,38.4 C517,38.4 517,38.4 532,38.4 L542,38.4 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M366,150.868 L376,150.868 C391,150.868 391,38.4 406,38.4 L416,38.4 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="76" x="416" y="132.8453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="426" y="155.8404">mmap()</text><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="526" x="542" y="76.5484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="506" x="552" y="99.5435">the standard way to allocate large amounts of memory and map pages</text><path d="M492,150.9937 L502,150.9937 C517,150.9937 517,94.6968 532,94.6968 L542,94.6968 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="777" x="542" y="132.8453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="757" x="552" y="155.8404">often used for files, the MAP_ANONYMOUS flag causes mmap() to allocate normal memory for the process</text><path d="M492,150.9937 L502,150.9937 C517,150.9937 517,150.9937 532,150.9937 L542,150.9937 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="618" x="542" y="189.1422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="598" x="552" y="212.1373">The MAP_SHARED flag can make the allocated pages sharable with other processes</text><path d="M492,150.9937 L502,150.9937 C517,150.9937 517,207.2906 532,207.2906 L542,207.2906 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M366,150.868 L376,150.868 C391,150.868 391,150.9937 406,150.9937 L416,150.9937 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><rect fill="#F1F1F1" height="36.2969" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:1.5;" width="376" x="416" y="245.439"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="426" y="268.4341">brk()/sbrk() can be used to increase the heap size</text><path d="M366,150.868 L376,150.868 C391,150.868 391,263.5875 406,263.5875 L416,263.5875 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><path d="M107,150.868 L117,150.868 C132,150.868 132,150.868 147,150.868 L157,150.868 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[dc7433b797e0eeeefa78d9daf16bc92c]
@startmindmap
+ User space
++ User space allocation ways
***[#moccasin]:<code>
alloc()
</code>;
++++ sit on top of platform methods
+++ mmap()
++++ the standard way to allocate large amounts of memory and map pages
++++ often used for files, the MAP_ANONYMOUS flag causes mmap() to allocate normal memory for the process
++++ The MAP_SHARED flag can make the allocated pages sharable with other processes
+++ brk()/sbrk() can be used to increase the heap size
@endmindmap

PlantUML version 1.2022.4beta2(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>